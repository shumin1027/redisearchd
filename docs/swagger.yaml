definitions:
  http.HttpError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  http.Response:
    properties:
      error:
        $ref: '#/definitions/http.HttpError'
        description: 调用失败时，返回的出错信息
      inventory:
        description: 调用成功时，返回的数据清单
        type: object
      success:
        description: 是否调用成功：true表示调用成功，false表示调用失败
        type: boolean
    type: object
  http.UpdateDocFieldsPayload:
    properties:
      fields:
        items:
          type: string
        type: array
      values:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
paths:
  /docs:
    delete:
      description: Batch Delete Docs By Ids
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Batch Delete Docs By Ids
      tags:
      - doc
    post:
      description: Create Docs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create Docs
      tags:
      - doc
    put:
      description: Update docs,Use "HSET"
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update docs,Use "HSET"
      tags:
      - doc
  /docs/{id}:
    delete:
      description: Delete One Doc By Id
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Delete One Doc By Id
      tags:
      - doc
    get:
      description: Get Doc By Id
      parameters:
      - description: doc id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
      summary: Get Doc By Id
      tags:
      - doc
    patch:
      description: Update doc field,Use "HMSET"
      parameters:
      - description: doc id
        in: path
        name: id
        required: true
        type: string
      - description: doc id
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/http.UpdateDocFieldsPayload'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update doc field,Use "HMSET"
      tags:
      - doc
  /indexes:
    get:
      description: List all indexes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: List all indexes
      tags:
      - index
  /indexes/{index}:
    delete:
      description: Delete an index
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      - description: delete document
        in: query
        name: deldocs
        type: boolean
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Delete an index
      tags:
      - index
    get:
      description: Get Index Info
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Response'
      summary: Get Index Info
      tags:
      - index
    post:
      description: 'Create an index. `schema.fields.type`: `0`-`Text`;`1`-`Numeric`;`2`-`Geo`;`3`-`Tag`'
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: ""
      summary: Create an index
      tags:
      - index
  /indexes/{index}/search:
    get:
      description: Searches the index with a textual query, returning either documents
        or just count(when num=0 and offset=0).
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      - description: ' the text query to search'
        in: query
        name: raw
        required: true
        type: string
      - default: 10
        description: maximum number of documents returned. default is `10`;max is
          `1_000_000`. when num is `0`, just return the count
        in: query
        maximum: 1000000
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: number of documents to skip，default is `0`
        in: query
        minimum: 0
        name: offset
        type: integer
      - collectionFormat: csv
        description: 'If set, we limit the result to a given set of keys specified
          in the list. '
        in: query
        items:
          type: string
        name: in_keys
        type: array
      - collectionFormat: csv
        description: ' If set, filter the results to ones appearing only in specific
          fields of the document, like title or URL. num is the number of specified
          field arguments '
        in: query
        items:
          type: string
        name: in_fields
        type: array
      - collectionFormat: csv
        description: 'Use this keyword to limit which fields from the document are
          returned.e.g: `return_fields=id,name,age` '
        in: query
        items:
          type: string
        name: return_fields
        type: array
      - description: 'If specified, the results are ordered by the value of this field.
          This applies to both text and numeric fields. e.g: `sort_by=name|asc`'
        in: query
        name: sort_by
        type: string
      - description: If set, we use a stemmer for the supplied language during search
          for query expansion
        in: query
        name: language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.Response'
            type: array
      summary: Search in an index with GET
      tags:
      - search
    post:
      description: Searches the index with a textual query, returning either documents
        or just count(when num=0 and offset=0).
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.Response'
            type: array
      summary: Search in an index with POST
      tags:
      - index
  /search/{index}:
    get:
      description: Searches the index with a textual query, returning either documents
        or just count(when num=0 and offset=0).
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      - description: ' the text query to search'
        in: query
        name: raw
        required: true
        type: string
      - default: 10
        description: maximum number of documents returned. default is `10`;max is
          `1_000_000`. when num is `0`, just return the count
        in: query
        maximum: 1000000
        minimum: 0
        name: limit
        type: integer
      - default: 0
        description: number of documents to skip，default is `0`
        in: query
        minimum: 0
        name: offset
        type: integer
      - collectionFormat: csv
        description: 'If set, we limit the result to a given set of keys specified
          in the list. '
        in: query
        items:
          type: string
        name: in_keys
        type: array
      - collectionFormat: csv
        description: ' If set, filter the results to ones appearing only in specific
          fields of the document, like title or URL. num is the number of specified
          field arguments '
        in: query
        items:
          type: string
        name: in_fields
        type: array
      - collectionFormat: csv
        description: 'Use this keyword to limit which fields from the document are
          returned.e.g: `return_fields=id,name,age` '
        in: query
        items:
          type: string
        name: return_fields
        type: array
      - description: 'If specified, the results are ordered by the value of this field.
          This applies to both text and numeric fields. e.g: `sort_by=name|asc`'
        in: query
        name: sort_by
        type: string
      - description: If set, we use a stemmer for the supplied language during search
          for query expansion
        in: query
        name: language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.Response'
            type: array
      summary: Search in an index with GET
      tags:
      - search
    post:
      description: Searches the index with a textual query, returning either documents
        or just count(when num=0 and offset=0).
      parameters:
      - description: index name
        in: path
        name: index
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.Response'
            type: array
      summary: Search in an index with POST
      tags:
      - search
swagger: "2.0"
